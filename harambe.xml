<?xml version="1.0" encoding="UTF-8"?><tululoo version="130" uid="712" title="" advancedscriptmode="0" imgfolder="img" audfolder="aud"><functions/><variables/><comments/><sprites count="20"><sprite name="spr_block" centerx="0" centery="0" collisionshape="Box" collisionradius="32" collisionleft="0" collisionright="64" collisiontop="0" collisionbottom="64"/><sprite name="spr_child_flying" centerx="16" centery="16" collisionshape="Circle" collisionradius="16" collisionleft="0" collisionright="32" collisiontop="0" collisionbottom="32"/><sprite name="spr_child_launched" centerx="13" centery="12" collisionshape="Circle" collisionradius="13" collisionleft="0" collisionright="26" collisiontop="0" collisionbottom="24"/><sprite name="spr_child_launching" centerx="12" centery="12" collisionshape="Box" collisionradius="12" collisionleft="0" collisionright="24" collisiontop="0" collisionbottom="24"/><sprite name="spr_child_walk" centerx="13" centery="12" collisionshape="Circle" collisionradius="13" collisionleft="0" collisionright="26" collisiontop="0" collisionbottom="24"/><sprite name="spr_crosshair" centerx="8" centery="8" collisionshape="Box" collisionradius="8" collisionleft="0" collisionright="16" collisiontop="0" collisionbottom="16"/><sprite name="spr_food" centerx="16" centery="16" collisionshape="Circle" collisionradius="16" collisionleft="0" collisionright="32" collisiontop="0" collisionbottom="32"/><sprite name="spr_harambe_dead" centerx="40" centery="37" collisionshape="Circle" collisionradius="32" collisionleft="0" collisionright="80" collisiontop="0" collisionbottom="74"/><sprite name="spr_harambe_hit_chest" centerx="29" centery="32" collisionshape="Circle" collisionradius="29" collisionleft="0" collisionright="59" collisiontop="0" collisionbottom="64"/><sprite name="spr_harambe_hit_face" centerx="32" centery="30" collisionshape="Circle" collisionradius="32" collisionleft="0" collisionright="64" collisiontop="0" collisionbottom="60"/><sprite name="spr_harambe_hit_head" centerx="39" centery="32" collisionshape="Circle" collisionradius="32" collisionleft="0" collisionright="78" collisiontop="0" collisionbottom="65"/><sprite name="spr_harambe_punch_left" centerx="45" centery="32" collisionshape="Circle" collisionradius="32" collisionleft="0" collisionright="90" collisiontop="0" collisionbottom="64"/><sprite name="spr_harambe_punch_right" centerx="45" centery="28" collisionshape="Circle" collisionradius="32" collisionleft="0" collisionright="90" collisiontop="0" collisionbottom="57"/><sprite name="spr_harambe_run" centerx="39" centery="32" collisionshape="Circle" collisionradius="30" collisionleft="8" collisionright="68" collisiontop="10" collisionbottom="68"/><sprite name="spr_harambe_stand" centerx="39" centery="32" collisionshape="Circle" collisionradius="30" collisionleft="12" collisionright="68" collisiontop="8" collisionbottom="64"/><sprite name="spr_harambe_walk" centerx="39" centery="32" collisionshape="Circle" collisionradius="30" collisionleft="0" collisionright="78" collisiontop="0" collisionbottom="64"/><sprite name="spr_shadow" centerx="10" centery="5" collisionshape="Box" collisionradius="10" collisionleft="0" collisionright="21" collisiontop="0" collisionbottom="11"/><sprite name="spr_swat_shoot" centerx="16" centery="24" collisionshape="Box" collisionradius="16" collisionleft="0" collisionright="32" collisiontop="0" collisionbottom="48"/><sprite name="spr_swat_stand" centerx="16" centery="24" collisionshape="Box" collisionradius="16" collisionleft="0" collisionright="32" collisiontop="0" collisionbottom="48"/><sprite name="spr_target" centerx="4" centery="4" collisionshape="Box" collisionradius="4" collisionleft="0" collisionright="8" collisiontop="0" collisionbottom="8"/></sprites><frames count="118"><frame file="0" sprite="spr_harambe_run"/><frame file="1" sprite="spr_harambe_run"/><frame file="2" sprite="spr_harambe_run"/><frame file="3" sprite="spr_harambe_run"/><frame file="4" sprite="spr_harambe_run"/><frame file="5" sprite="spr_harambe_run"/><frame file="6" sprite="spr_harambe_run"/><frame file="7" sprite="spr_harambe_run"/><frame file="8" sprite="spr_harambe_run"/><frame file="0" sprite="spr_harambe_stand"/><frame file="1" sprite="spr_harambe_stand"/><frame file="2" sprite="spr_harambe_stand"/><frame file="3" sprite="spr_harambe_stand"/><frame file="4" sprite="spr_harambe_stand"/><frame file="5" sprite="spr_harambe_stand"/><frame file="6" sprite="spr_harambe_stand"/><frame file="7" sprite="spr_harambe_stand"/><frame file="0" sprite="spr_child_walk"/><frame file="1" sprite="spr_child_walk"/><frame file="2" sprite="spr_child_walk"/><frame file="3" sprite="spr_child_walk"/><frame file="4" sprite="spr_child_walk"/><frame file="5" sprite="spr_child_walk"/><frame file="6" sprite="spr_child_walk"/><frame file="7" sprite="spr_child_walk"/><frame file="8" sprite="spr_child_walk"/><frame file="0" sprite="spr_child_launched"/><frame file="1" sprite="spr_child_launched"/><frame file="2" sprite="spr_child_launched"/><frame file="3" sprite="spr_child_launched"/><frame file="4" sprite="spr_child_launched"/><frame file="5" sprite="spr_child_launched"/><frame file="6" sprite="spr_child_launched"/><frame file="7" sprite="spr_child_launched"/><frame file="8" sprite="spr_child_launched"/><frame file="9" sprite="spr_child_launched"/><frame file="10" sprite="spr_child_launched"/><frame file="11" sprite="spr_child_launched"/><frame file="12" sprite="spr_child_launched"/><frame file="13" sprite="spr_child_launched"/><frame file="14" sprite="spr_child_launched"/><frame file="15" sprite="spr_child_launched"/><frame file="16" sprite="spr_child_launched"/><frame file="17" sprite="spr_child_launched"/><frame file="18" sprite="spr_child_launched"/><frame file="19" sprite="spr_child_launched"/><frame file="20" sprite="spr_child_launched"/><frame file="21" sprite="spr_child_launched"/><frame file="0" sprite="spr_child_launching"/><frame file="1" sprite="spr_child_launching"/><frame file="0" sprite="spr_child_flying"/><frame file="1" sprite="spr_child_flying"/><frame file="2" sprite="spr_child_flying"/><frame file="3" sprite="spr_child_flying"/><frame file="4" sprite="spr_child_flying"/><frame file="5" sprite="spr_child_flying"/><frame file="6" sprite="spr_child_flying"/><frame file="7" sprite="spr_child_flying"/><frame file="8" sprite="spr_child_flying"/><frame file="9" sprite="spr_child_flying"/><frame file="10" sprite="spr_child_flying"/><frame file="11" sprite="spr_child_flying"/><frame file="0" sprite="spr_shadow"/><frame file="0" sprite="spr_swat_stand"/><frame file="1" sprite="spr_swat_stand"/><frame file="2" sprite="spr_swat_stand"/><frame file="3" sprite="spr_swat_stand"/><frame file="0" sprite="spr_block"/><frame file="0" sprite="spr_target"/><frame file="0" sprite="spr_crosshair"/><frame file="0" sprite="spr_harambe_punch_right"/><frame file="1" sprite="spr_harambe_punch_right"/><frame file="2" sprite="spr_harambe_punch_right"/><frame file="3" sprite="spr_harambe_punch_right"/><frame file="0" sprite="spr_harambe_punch_left"/><frame file="1" sprite="spr_harambe_punch_left"/><frame file="2" sprite="spr_harambe_punch_left"/><frame file="0" sprite="spr_harambe_walk"/><frame file="1" sprite="spr_harambe_walk"/><frame file="2" sprite="spr_harambe_walk"/><frame file="3" sprite="spr_harambe_walk"/><frame file="4" sprite="spr_harambe_walk"/><frame file="5" sprite="spr_harambe_walk"/><frame file="6" sprite="spr_harambe_walk"/><frame file="7" sprite="spr_harambe_walk"/><frame file="8" sprite="spr_harambe_walk"/><frame file="9" sprite="spr_harambe_walk"/><frame file="0" sprite="spr_harambe_hit_head"/><frame file="1" sprite="spr_harambe_hit_head"/><frame file="2" sprite="spr_harambe_hit_head"/><frame file="3" sprite="spr_harambe_hit_head"/><frame file="0" sprite="spr_harambe_hit_face"/><frame file="1" sprite="spr_harambe_hit_face"/><frame file="0" sprite="spr_harambe_hit_chest"/><frame file="1" sprite="spr_harambe_hit_chest"/><frame file="0" sprite="spr_harambe_dead"/><frame file="1" sprite="spr_harambe_dead"/><frame file="2" sprite="spr_harambe_dead"/><frame file="0" sprite="spr_food"/><frame file="1" sprite="spr_food"/><frame file="2" sprite="spr_food"/><frame file="3" sprite="spr_food"/><frame file="4" sprite="spr_food"/><frame file="5" sprite="spr_food"/><frame file="6" sprite="spr_food"/><frame file="7" sprite="spr_food"/><frame file="8" sprite="spr_food"/><frame file="9" sprite="spr_food"/><frame file="10" sprite="spr_food"/><frame file="11" sprite="spr_food"/><frame file="12" sprite="spr_food"/><frame file="13" sprite="spr_food"/><frame file="14" sprite="spr_food"/><frame file="15" sprite="spr_food"/><frame file="0" sprite="spr_swat_shoot"/><frame file="1" sprite="spr_swat_shoot"/><frame file="2" sprite="spr_swat_shoot"/><frame file="3" sprite="spr_swat_shoot"/></frames><sounds count="1"><sound name="blow" wav="blow.wav" mp3="" ogg=""/></sounds><musics count="1"><music name="snd_bg_voices" wav="" mp3="" ogg="bg_voices.ogg"/></musics><backgrounds count="1"><background name="bg_grass_tile" file="tile_grass4.png" tile="0" tileheight="32" tilewidth="32" tilexoffset="0" tileyoffset="0" tilexspace="0" tileyspace="0"/></backgrounds><fonts count="3"><font name="courier12" family="courier" size="12" bold="0" italic="0"/><font name="courier13" family="courier" size="13" bold="0" italic="0"/><font name="generic" family="courier" size="20" bold="0" italic="0"/></fonts><objects count="11"><object name="SceneObject34" template="GOD" prototype="0" scene="main_room" sprite="" x="21" y="23" visible="0" depth="-9999" collision="0" parent="" direction="0" image_angle="0"/><object name="GOD" template="" prototype="1" scene="" sprite="" x="0" y="0" visible="1" depth="-9999" collision="1" parent="" direction="0" image_angle="0"/><object name="harambe" template="" prototype="1" scene="" sprite="spr_harambe_run" x="0" y="0" visible="1" depth="0" collision="1" parent="" direction="0" image_angle="0"/><object name="block" template="" prototype="1" scene="" sprite="spr_block" x="0" y="0" visible="1" depth="0" collision="1" parent="" direction="0" image_angle="0"/><object name="child" template="" prototype="1" scene="" sprite="spr_child_launching" x="0" y="0" visible="1" depth="0" collision="1" parent="" direction="0" image_angle="0"/><object name="shadow" template="" prototype="1" scene="" sprite="spr_shadow" x="0" y="0" visible="1" depth="0" collision="1" parent="" direction="0" image_angle="0"/><object name="enemy" template="" prototype="1" scene="" sprite="spr_swat_stand" x="0" y="0" visible="1" depth="0" collision="1" parent="" direction="0" image_angle="0"/><object name="target" template="" prototype="1" scene="" sprite="spr_target" x="0" y="0" visible="0" depth="0" collision="1" parent="" direction="0" image_angle="0"/><object name="crosshair" template="" prototype="1" scene="" sprite="spr_crosshair" x="0" y="0" visible="1" depth="-999999" collision="1" parent="" direction="0" image_angle="0"/><object name="text_handler" template="" prototype="1" scene="" sprite="" x="0" y="0" visible="1" depth="-9999" collision="1" parent="" direction="0" image_angle="0"/><object name="food" template="" prototype="1" scene="" sprite="spr_food" x="0" y="0" visible="1" depth="0" collision="1" parent="" direction="0" image_angle="0"/></objects><scripts count="45"><script name="scr_29" object="GOD" event="Creation" parameter="">global.LOG = true;
global.WIDTH = Math.floor(room_width/24);
global.HEIGHT = Math.floor(room_height/24);
log("global.WIDTH = " + global.WIDTH);
log("global.HEIGHT = " + global.HEIGHT);
global.GOD = this;
global.harambe = instance_create(room_width/2, room_height/2, harambe);

this.score = 0;
this.level = 1;

this.game_over = false;
this.game_over_screen_alpha = 0;</script><script name="scr_35" object="harambe" event="Creation" parameter="">set_image_scale(this, 4);
this.image_speed = 0;

this.hp = 100;
this.max_speed = (global.WIDTH+global.HEIGHT)/2;
this.show_hp = false;

this.lbound = global.WIDTH+sprite_index.width*image_xscale/3;
this.rbound = room_width-global.WIDTH-sprite_index.width*image_xscale/3;
this.ubound = global.HEIGHT/2;
this.dbound = room_height-global.HEIGHT-sprite_index.height*image_yscale/2;

this.n_hits = 0;
this.start_direction = null;
</script><script name="scr_36" object="GOD" event="Draw" parameter="">draw_set_color(0, 0, 0);
draw_set_linewidth(global.WIDTH/20);
draw_rectangle(global.WIDTH, global.HEIGHT, room_width-global.WIDTH, room_height-global.HEIGHT, true);
if (global.harambe.show_hp) {
	draw_set_color(0, 0, 0);
	draw_rectangle(global.harambe.x -global.WIDTH,
				global.harambe.y -global.HEIGHT*2,
				global.harambe.x -global.WIDTH + 100 *global.WIDTH/48,
				global.harambe.y -global.HEIGHT*1.8,
				false);
	draw_set_color(255 - Math.floor(global.harambe.hp*2.55),
		Math.floor(global.harambe.hp*2.55),
		0);
	draw_set_linewidth(1);
	draw_rectangle(global.harambe.x -global.WIDTH,
				global.harambe.y -global.HEIGHT*2,
				global.harambe.x -global.WIDTH + global.harambe.hp *global.WIDTH/48,
				global.harambe.y -global.HEIGHT*1.8,
				false);
	draw_set_color(255, 255, 255);
	draw_rectangle(global.harambe.x -global.WIDTH,
				global.harambe.y -global.HEIGHT*2,
				global.harambe.x -global.WIDTH + global.harambe.hp *global.WIDTH/48,
				global.harambe.y -global.HEIGHT*1.8,
				true);
}

draw_bold_text(global.WIDTH*2, global.HEIGHT/2, "LEVEL: " + this.level); // debug

if (game_over) {
	draw_set_color(0, 0, 0);
	draw_set_alpha(game_over_screen_alpha);
	draw_rectangle(0, 0, room_width, room_height, false);
	game_over_screen_alpha += 0.005;
	if (game_over_screen_alpha &gt;= 1) {
		location.reload();
	}
	draw_set_alpha(1);
}</script><script name="scr_51" object="GOD" event="Creation" parameter="">// child creation
var interval_child_time = 1;
function interval_child() {
	setTimeout(function() {
		var rnd = Math.random();
		var _child = null;
		if (rnd &lt; 0.25) { // left
			_child = instance_create(global.WIDTH/2,
						global.WIDTH+Math.random()*(room_height-global.WIDTH),
						child);
		} else if (rnd &lt; 0.5) { // up
			_child = instance_create(global.WIDTH+Math.random()*(room_width-global.WIDTH),
						global.WIDTH/2,
						child);
		} else if (rnd &lt; 0.75) { // right
			_child = instance_create(room_width-global.WIDTH/2,
						global.WIDTH+Math.random()*(room_height-global.WIDTH),
						child);
		} else { // down
			_child = instance_create(global.WIDTH+Math.random()*(room_width-global.WIDTH),
						room_height-global.WIDTH/2,
						child);	
		}
		_child.goto_x = global.WIDTH+Math.random()*(room_width-global.WIDTH *2);
		_child.goto_y = global.WIDTH+Math.random()*(room_height-global.WIDTH *2);
		_child._speed = global.WIDTH/4 + Math.random()*global.WIDTH/4;
		interval_child_time = 10000/Math.log(3+global.GOD.level)
					- (instance_number(enemy)-instance_number(child))*1000
					+ 2500*Math.random()/Math.log(3+global.GOD.level);
		interval_child();
	}, interval_child_time);
}
interval_child();</script><script name="scr_52" object="child" event="Step" parameter="">if (this.launched) {
	move_towards_point(this.goto_x, this.goto_y, this._speed);
}
if (x == goto_x &amp;&amp; y == goto_y &amp;&amp; launched) {
	this.launched = false;
	sprite_index = spr_child_walk;
	image_speed = 0;
	/*setInterval(function() {
		if (flying) { return; }
		direction = Math.random()*360;
		speed = 0.2+Math.random()*0.5;
		image_speed = speed/2;
		if (direction &gt; 270 || direction &lt; 90) {
			image_xscale = Math.abs(image_xscale)*-1;
		} else {
			image_xscale = Math.abs(image_xscale);
		}
	}, 5000+Math.random()*5000);*/
}

if (outside_of_room(this)) {
	instance_destroy();
}</script><script name="scr_54" object="block" event="Creation" parameter="">set_image_scale(this, 1);</script><script name="_10" object="" event="" parameter=""/><script name="scr_31" object="harambe" event="Collision" parameter="target">friction = speed/global.WIDTH*2;
with(other) instance_destroy();</script><script name="scr_39" object="harambe" event="Collision" parameter="child">if (other.sprite_index == spr_child_launching) {
	return;
}
if (this.speed &gt; this.max_speed/5) {
	if (!other.flying) {
		other.speed = this.speed*2;
		other.direction = point_direction(this.x, this.y, other.x, other.y);
		other.sprite_index = spr_child_flying;
		other.image_speed = other.speed/5;
		other.flying = true;
		sprite_index = sprite_index == spr_harambe_punch_right ?
			spr_harambe_punch_left : spr_harambe_punch_right;
		image_index = 0;
		image_speed = 0.2;
		n_hits++;
		var s = Math.floor((this.speed/this.max_speed) * 100 * n_hits);
		global.GOD.score += s;
		show_text(x, y, "+" + s);
	}
} else {
	this.holding = other;
}</script><script name="scr_40" object="child" event="Creation" parameter="">set_image_scale(this, 1.25);
this.launched = false;
this.flying = false;
image_speed = 0;

var me = this;
setTimeout(function() {
	me.launched = true;
	me.sprite_index = spr_child_launched;
	me.image_speed = _speed /20;
}, 1000);</script><script name="scr_45" object="harambe" event="End step" parameter="">if (global.GOD.game_over) {
	depth = global.GOD.depth-1;
} else {
	depth = -y;
}
if (direction &gt; -90 &amp;&amp; direction &lt; 90) {
	image_xscale = Math.abs(image_xscale)*-1;
} else {
	image_xscale = Math.abs(image_xscale);
}

if (sprite_index != spr_harambe_stand
	&amp;&amp; sprite_index != spr_harambe_walk
	&amp;&amp; sprite_index != spr_harambe_run) {
	return;
}
if (speed &gt; max_speed/2.5) {
	sprite_index = spr_harambe_run;
} else if (speed &gt; 0.2) {
	sprite_index = spr_harambe_walk;
} else {
	sprite_index = spr_harambe_stand;
}
if (speed &gt; 0.2) {
	image_speed = speed /global.WIDTH*2;
} else {
	image_speed = 0.3;
}
</script><script name="scr_56" object="child" event="End step" parameter="">depth = -y;
collision_checking = (sprite_index == spr_child_flying ||
	point_distance(x, y, global.harambe.x, global.harambe.y) &lt; global.WIDTH*5);

if (sprite_index == spr_child_flying &amp;&amp; this.target == null) {
	var threshold = global.WIDTH*3;
	var min_d = 999999;
	for(var i=0; i&lt;instance_list(enemy).length; i++) {
		var s = instance_list(enemy)[i];
		var p = point_distance(x, y, s.x, s.y);
		if (p &lt; threshold  &amp;&amp; p &lt; min_d) {
			this.target = s;
			min_d = p;
		}
	}
	if (this.target != null) {
		direction = point_direction(x, y, this.target.x, this.target.y);
	}
}</script><script name="_28" object="" event="" parameter=""/><script name="scr_134" object="GOD" event="End step" parameter="">this.level = 1 + Math.floor(score/1000);</script><script name="scr_137" object="GOD" event="Creation" parameter="">// enemy creation
this.interval_soldier = setInterval(function() {
	var rnd = Math.random();
	var e;
	if (rnd &lt; 0.25) { // left
		e = instance_create(global.WIDTH/2,
			global.HEIGHT+Math.random()*(room_height-global.HEIGHT),
			enemy)
		e._direction = 2;
	} else if (rnd &lt; 0.5) { // up
		e = instance_create(global.WIDTH+Math.random()*(room_width-global.WIDTH),
			global.HEIGHT/2,
			enemy);
		e._direction = 0;
	} else if (rnd &lt; 0.75) { // right
		e = instance_create(room_width-global.WIDTH/2,
			global.HEIGHT+Math.random()*(room_height-global.HEIGHT),
			enemy);
		e._direction = 1;
	} else { // down
		e = instance_create(global.WIDTH+Math.random()*(room_width-global.WIDTH),
			room_height-global.HEIGHT/2,
			enemy);
		e._direction = 3;
	}
}, 20000/Math.log(3+this.level) + 10000*Math.random()/Math.log(3+this.level));
</script><script name="scr_138" object="enemy" event="Creation" parameter="">set_image_scale(this, 1.75);
this.image_speed = 0;

this.crosshair = instance_create(x, y, crosshair);
this.crosshair.goto_x = global.harambe.x;
this.crosshair.goto_y = global.harambe.y;
this.crosshair.goto_speed = Math.max(global.GOD.level, 10);
this.interval_time = 10000 / global.GOD.level/1.5;

this.interval_move = setInterval(function() {
			var rnd = Math.random();
			var h = global.harambe;
			if (rnd &lt; 0.3) { // chest
				crosshair.target = 0;
				crosshair.goto_x = h.x;
				crosshair.goto_y = h.y + h.sprite_index.height*h.image_yscale/4;			
			} else if (rnd &lt; 0.6) { // face
				crosshair.target = 1;
				crosshair.goto_x = h.x;
				crosshair.goto_y = h.y - h.sprite_index.height*h.image_yscale/5;
			} else { // head
				crosshair.target = 2;
				crosshair.goto_x = h.x;
				crosshair.goto_y = h.y - h.sprite_index.height*h.image_yscale/4;
			}
			crosshair.goto_speed = Math.max(global.GOD.level, 10);
			if (interval_time &gt; 0.1) {
				interval_time/=1.1;
			}
		}, interval_time);
</script><script name="scr_148" object="crosshair" event="Step" parameter="">if (x != goto_x || y != goto_y) {
	move_towards_point(goto_x, goto_y, goto_speed);
}</script><script name="scr_149" object="enemy" event="Destroy" parameter="">with(this.crosshair) { instance_destroy(); }</script><script name="_29" object="" event="" parameter=""/><script name="_30" object="" event="" parameter=""/><script name="_31" object="" event="" parameter=""/><script name="scr_150" object="enemy" event="Draw" parameter="">draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_alpha);
if (this.crosshair.shooting) {
	draw_set_color(255, 0, 0);
	draw_dotted_line(x, y, crosshair.x, crosshair.y);
}
</script><script name="scr_151" object="crosshair" event="Draw" parameter="">if (global.GOD.game_over) {
	return;
}
draw_set_color(255, 0, 0);
draw_circle(x, y, global.WIDTH/10, false);</script><script name="_32" object="" event="" parameter=""/><script name="_33" object="" event="" parameter=""/><script name="_34" object="" event="" parameter=""/><script name="scr_154" object="harambe" event="Animation end" parameter="">if (sprite_index == spr_harambe_dead) {
	image_speed = 0;
	return;
}
if (sprite_index != spr_harambe_stand
	&amp;&amp; sprite_index != spr_harambe_walk
	&amp;&amp; sprite_index != spr_harambe_run) {
	sprite_index = spr_harambe_walk;
}</script><script name="scr_151_34" object="crosshair" event="Creation" parameter="">this.collision_time = 0;
this.shooting = false;</script><script name="scr_152" object="crosshair" event="Collision" parameter="harambe">collision_time++;
if (!shooting &amp;&amp; collision_time &gt; 200/Math.log(3+global.GOD.level)) {
	shooting = true;
	update_harambe_hp(-5);
	global.harambe.image_speed = 0.1;
	global.harambe.image_index = 0;		
	if (target == 0) {
		global.harambe.sprite_index = spr_harambe_hit_chest;
	} else if (target == 1) {
		global.harambe.sprite_index = spr_harambe_hit_face;		
	} else {
		global.harambe.sprite_index = spr_harambe_hit_head;		
	}
	setTimeout(function() {
		shooting = false;
		collision_time = 0;
	}, 1000);
}</script><script name="_35" object="" event="" parameter=""/><script name="scr_156" object="harambe" event="Step" parameter="">if (x &lt; lbound || x &gt; rbound) {
	x = x&lt;lbound ? lbound+1 : rbound-1;
	speed = 0;
}
if (y &lt; ubound || y &gt; dbound) {
	y = y&lt;ubound ? ubound+1 : dbound-1;
	speed = 0;
}

// death
if (hp &lt;= 0 &amp;&amp; !global.GOD.game_over) {
	speed = 0;
	sprite_index = spr_harambe_dead;
	image_speed = 0.05;
	collision_checking = false;
	global.GOD.game_over = true;
}</script><script name="scr_157" object="enemy" event="Collision" parameter="child">if (other.sprite_index == spr_child_launching) {
	return;
}
var s = Math.floor(other.speed * 2.5);
show_text(x, y, "+" + s);
global.GOD.score += s;
instance_destroy();</script><script name="scr_158" object="text_handler" event="Draw" parameter="">draw_bold_text(x, y, text, color);</script><script name="scr_159" object="text_handler" event="Creation" parameter="">fucking_die = false;
direction = point_direction(x, y, room_width/2, room_height/2);
speed = global.WIDTH/10;
var me = this;
setTimeout(function() { me.fucking_die = true; }, 1500);</script><script name="_36" object="" event="" parameter=""/><script name="scr_163" object="text_handler" event="End step" parameter="">if (fucking_die) { instance_destroy(); }</script><script name="scr_164" object="child" event="Collision" parameter="child">//?</script><script name="scr_162" object="harambe" event="Step" parameter="">// movement
if (hp &lt;= 0) {
	return;
}
if (mouse_down) {
	direction = point_direction(x, y, mouse_x, mouse_y);
	speed = Math.min(max_speed, point_distance(x, y, mouse_x, mouse_y)/15);
	if (start_direction == null || Math.abs(direction-start_direction) &gt; 20) {
		n_hits = 0;
		start_direction = direction;
	}
}

if (speed &gt; 0) {
	speed -= max_speed/30;
} else {
	speed = 0;
	n_hits = 0;
}
</script><script name="scr_166" object="food" event="Creation" parameter="">image_speed = 0;
set_image_scale(this, 1.5);
this.launched = false;
collision_checking = false;

var me = this;
setTimeout(function() {
	me.launched = true;
}, 1000);</script><script name="scr_167" object="harambe" event="Collision" parameter="food">update_harambe_hp((other.type+1)*5);
with(other) instance_destroy();</script><script name="scr_168" object="GOD" event="Creation" parameter="">// food creation
this.interval_food = setInterval(function() {
	var rnd = Math.random();
	var _food = null;
	if (rnd &lt; 0.25) { // left
		_food = instance_create(global.WIDTH/2,
					global.WIDTH+Math.random()*(room_height-global.WIDTH),
					food);
	} else if (rnd &lt; 0.5) { // up
		_food = instance_create(global.WIDTH+Math.random()*(room_width-global.WIDTH),
					global.WIDTH/2,
					food);
	} else if (rnd &lt; 0.75) { // right
		_food = instance_create(room_width-global.WIDTH/2,
					global.WIDTH+Math.random()*(room_height-global.WIDTH),
					food);
	} else { // down
		_food = instance_create(global.WIDTH+Math.random()*(room_width-global.WIDTH),
					room_height-global.WIDTH/2,
					food);	
	}
	_food.type = Math.floor(Math.random()*12);
	_food.goto_x = global.WIDTH+Math.random()*(room_width-global.WIDTH *2);
	_food.goto_y = global.WIDTH+Math.random()*(room_height-global.WIDTH *2);
	_food._speed = global.WIDTH/4 + Math.random()*global.WIDTH/4;
}, 30000 + 15000*Math.random());
</script><script name="scr_171" object="food" event="Step" parameter="">image_index = this.type;
if (launched) {
	move_towards_point(this.goto_x, this.goto_y, this._speed);
	image_angle += this._speed;
}
if (x == goto_x &amp;&amp; y == goto_y &amp;&amp; launched) {
	launched = false;
	collision_checking = true;
}</script><script name="scr_172" object="food" event="Draw" parameter="">draw_same_sprite(this);</script><script name="scr_209" object="enemy" event="End step" parameter="">this.image_index = this._direction;

if (this.crosshair.shooting
	|| this.crosshair.x != this.crosshair.goto_x
	|| this.crosshair.y != this.crosshair.goto_y) {
	sprite_index = spr_swat_shoot;
} else {
	sprite_index = spr_swat_stand;
}</script><script name="" object="" event="" parameter=""/></scripts><scenes count="1"><scene name="main_room" width="640" height="640" speed="30" red="192" green="192" blue="192" background="bg_grass_tile" backgroundstretch="0" backgroundtilex="1" backgroundtiley="1" viewportwidth="640" viewportheight="640" viewportxborder="50" viewportyborder="50" viewportobject="">// get screen width and height
var e = window, a = 'inner';
if (!( 'innerWidth' in window )) {
	a = 'client';
	e = document.documentElement || document.body;
}
var screen = {width:e[a + 'Width'], height:e[a + 'Height']};
// re-start room with adjusted scene size
__room_start__(this, main_room, screen.width, screen.height,
	30, 192, 192, 192, bg_grass_tile.image, true, true, false,
	screen.width, screen.height, null, 50, 50);</scene></scenes><layers count="1"><layer name="layer_33" scene="main_room" value="1000000"/></layers><tiles count="0"/><fns count="8"><fn name="draw_bold_text" params="x, y, txt, color" description="">function __generic() {
	__font_init__(this, generic, 'courier',
				Math.min(global.WIDTH, global.HEIGHT)/3, 0, 0)
};
draw_set_font(generic);
draw_set_color(0, 0, 0);
draw_text(x, y, txt);
draw_set_font(generic);
draw_set_color(255, 255, 255);
if (color == "red") {
	draw_set_color(255, 0, 0);
} else if (color == "green") {
	draw_set_color(0, 255, 0);
}
draw_text(x+1, y-1, txt);</fn><fn name="draw_dotted_line" params="start_x, start_y, end_x, end_y" description="">//log("draw_dotted_line(" + start_x +", " + start_y	+ ", " + end_x + ", " + end_y + ")");
delta = (end_x-start_x)/(end_y-start_y);
n_lines = point_distance(start_x, start_y, end_x, end_y)/global.WIDTH;
step_x = (end_x-start_x)/n_lines;
step_y = (end_y-start_y)/n_lines;
line_x = start_x;
line_y = start_y;
for(var i=1; i&lt;n_lines; i++) {
	//log(i + ": draw_line(" + line_x + ", " + line_y + ", " + (line_x+step_x/2) + ", " + (line_y+step_y/2) + ")");
	draw_line(line_x,
			line_y,
			line_x+step_x/2,
			line_y+step_y/2);
	line_x += step_x;
	line_y += step_y;
}</fn><fn name="log" params="" description="">if (global.LOG != null &amp;&amp; global.LOG!= undefined &amp;&amp; global.LOG) {
	for (var i = 0; i &lt; arguments.length; i++) {
		console.log(arguments[i]);
	}
}</fn><fn name="outside_of_room" params="obj" description="">return (obj.x &lt; 0 || obj.x &gt; room_width
	|| obj.y &lt; 0 || obj.y &gt; room_height);</fn><fn name="set_image_scale" params="obj, size" description="">var scale = Math.min(global.WIDTH*size /obj.sprite_index.width,
						global.HEIGHT*size /obj.sprite_index.height);
obj.image_xscale = obj.image_yscale = scale;</fn><fn name="show_text" params="x, y, text, color" description="">var t = instance_create(x, y, text_handler);
t.text = text;
t.color = color;</fn><fn name="update_harambe_hp" params="delta" description="">global.harambe.hp += delta;
if (global.harambe.hp &lt; 0) {
	global.harambe.hp = 0;
}
if (global.harambe.hp &gt; 100) {
	global.harambe.hp = 100;
}
global.harambe.show_hp = true;
/*
show_text(global.harambe.x,
		global.harambe.y,
		(delta&gt;0 ? "+":"") + delta,
		(delta&gt;0 ? "green":"red"));
*/
setTimeout(function() {
	global.harambe.show_hp = false;
	}, 1000);</fn><fn name="draw_same_sprite" params="obj" description="">draw_sprite_ext(obj.sprite_index,
				obj.image_index,
				obj.x,
				obj.y,
				obj.image_xscale,
				obj.image_yscale,
				obj.image_angle,
				obj.image_alpha);</fn></fns></tululoo>